/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package blockchainGUI;

import static Integrity.Integrity.getHash;
import blockchain.Blockchain;
import blockchain.MinerThr;
import java.awt.Dimension;
import java.io.File;
import java.security.KeyPair;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import security.confident.Asimetric;

/**
 *
 * @author gonca
 */
public class GeneratorPanel extends javax.swing.JFrame {
    
    private Blockchain bc;
    String algorithm = "SHA3-256";
    private KeyPair kp;
    
    /** Creates new form GeneratorPanel */
    public GeneratorPanel() {
        try {
            kp = Asimetric.generateKeyPair(2048);
        } catch (Exception ex) {
            Logger.getLogger(GeneratorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        customInit();
        this.setExtendedState(MAXIMIZED_BOTH);
        
        
    }
    
     private void customInit() {
        this.bc = new Blockchain();
        
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupOptions = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        psBtn = new javax.swing.JRadioButton();
        beBtn = new javax.swing.JRadioButton();
        cdsBtn = new javax.swing.JRadioButton();
        psdBtn = new javax.swing.JRadioButton();
        addBlock = new javax.swing.JButton();
        blockScroll = new javax.swing.JScrollPane();
        blocksPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        save = new javax.swing.JButton();
        load = new javax.swing.JButton();
        Chooser = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        num = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroupOptions.add(psBtn);
        psBtn.setText("PS");
        jPanel3.add(psBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 18, 57, -1));

        buttonGroupOptions.add(beBtn);
        beBtn.setText("BE");
        jPanel3.add(beBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 41, 57, -1));

        buttonGroupOptions.add(cdsBtn);
        cdsBtn.setText("CDS");
        jPanel3.add(cdsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 41, -1, -1));

        buttonGroupOptions.add(psdBtn);
        psdBtn.setText("PSD");
        jPanel3.add(psdBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 18, -1, -1));

        addBlock.setText("Add");
        addBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBlockActionPerformed(evt);
            }
        });
        jPanel3.add(addBlock, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 10, 122, 56));

        blocksPanel.setLayout(new javax.swing.BoxLayout(blocksPanel, javax.swing.BoxLayout.LINE_AXIS));
        blockScroll.setViewportView(blocksPanel);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel1.add(save);

        load.setText("Load");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });
        jPanel1.add(load);

        Chooser.setText("Escolher");
        Chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooserActionPerformed(evt);
            }
        });
        jPanel1.add(Chooser);

        jLabel2.setText("NÃºmero de eleitor");

        num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blockScroll))
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(120, 120, 120))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(blockScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBlockActionPerformed
        String fact = num.getText()+ "\n" + option();
        try {
            if(!validateUSer(fact)){

                bc.add(fact);
            }
        } catch (Exception ex) {
            Logger.getLogger(GeneratorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
//        data.setText("");
        num.setText("");
        this.drawChain();
        
    }//GEN-LAST:event_addBlockActionPerformed
private void drawChain() {
        // Remove all blocks from blocks panel
        this.blocksPanel.removeAll();
        // Add new list of blocks to the blocks panel
        this.bc.getBlocks().stream().forEach((block) -> {
            Blocks newBlock = new Blocks();
           
            try {
                newBlock.setFact(block.getHashUser() + "\n" + Base64.getEncoder().encodeToString(getHash(block.getVoterSecret(), algorithm))+ "\n"+
                        Base64.getEncoder().encodeToString(getHash(block.getCneSecret(), algorithm)));
                
            } catch (Exception ex) {
                Logger.getLogger(GeneratorPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            newBlock.setPrevious(block.getPrevious());
            newBlock.setNonce(block.getNonce());
            newBlock.setHash(block.getHash());
            newBlock.setTempo(block.getTempo());
            
            newBlock.setMaximumSize(new Dimension(600, 500));

            this.blocksPanel.add(newBlock);

            this.blocksPanel.revalidate();
        });
    }
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
       //JFileChooser myFile = new JFileChooser();
        try {
            bc.save();
        } catch (Exception ex) {
            Logger.getLogger(GeneratorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        try {
            bc.load(new File("D:\\myBlockchain.ser"));
            this.drawChain();
        } catch (Exception ex) {
            Logger.getLogger(GeneratorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadActionPerformed

    private void ChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooserActionPerformed
        JFileChooser chooseFile = new JFileChooser();
        chooseFile.setDialogTitle("Choose a directory to open a file: ");
        int returnValue = chooseFile.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
			File selectedFile = chooseFile.getSelectedFile();
			try {
                            bc.load(selectedFile);
                            this.drawChain();
                        } catch (Exception ex) {
                            Logger.getLogger(GeneratorPanel.class.getName()).log(Level.SEVERE, null, ex);
        };
		}
    }//GEN-LAST:event_ChooserActionPerformed

    private void numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneratorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneratorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneratorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneratorPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneratorPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Chooser;
    private javax.swing.JButton addBlock;
    private javax.swing.JRadioButton beBtn;
    private javax.swing.JScrollPane blockScroll;
    private javax.swing.JPanel blocksPanel;
    private javax.swing.ButtonGroup buttonGroupOptions;
    private javax.swing.JRadioButton cdsBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton load;
    private javax.swing.JTextField num;
    private javax.swing.JRadioButton psBtn;
    private javax.swing.JRadioButton psdBtn;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables

    public int option(){
        if(psBtn.isSelected()){return 1;}
        else if(psdBtn.isSelected()){return 2;}
        else if(beBtn.isSelected()){return 3;}
        else if(cdsBtn.isSelected()){return 4;}
        return 0;
    }
     public boolean validateUSer(String data) {
        boolean valida = false;
        for (int i = 0; i < bc.getBlocks().size(); i++) {
            if (getNum(data).equals(bc.getBlocks().get(i).hashUser)) {
                valida = true;
            }
            
        }
        if(valida) System.out.println("Entrada duplicada. JÃ¡ submeteu o seu voto.");
        return valida;
    }
     public String getNum(String data) {
        String[] vote = data.split("\n");
        String algorithm = "SHA3-256";
        String num = "";
        try {

            num = Base64.getEncoder().encodeToString(getHash(vote[0].getBytes(), algorithm));

        } catch (Exception ex) {
            Logger.getLogger(MinerThr.class.getName()).log(Level.SEVERE, null, ex);
        }
        return num;
    }
}
